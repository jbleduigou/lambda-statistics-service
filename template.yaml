AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Lambda Stats Service
  
  SAM Template for deploying a Lambda Statistics Service

Globals:
  Function:
    Timeout: 5

Parameters:
  Environment:
    Description: Environment to which the application is deployed
    Type: String
    Default: dev

Resources:
  SearchFunctionsFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: search-functions/
      Handler: search-functions
      Runtime: go1.x
      FunctionName: !Sub '${Environment}-search-lambda-function'
      Architectures:
        - x86_64
      Events:
        CatchAll:
          Type: Api 
          Properties:
            RestApiId:
              Ref: AccessLoggedApi
            Path: /search
            Method: GET
            RequestParameters:
              - method.request.querystring.region:
                  Required: false
      Policies:
        - Statement:
          - Sid: ListLambdaFunctions
            Effect: Allow
            Action:
            - lambda:List*
            Resource: '*'
      Environment: 
        Variables:
          ENVIRONMENT: !Ref Environment
      Tags:
        Environment: !Ref Environment
        Service: 'search-functions'

  SearchFunctionsFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: [ SearchFunctionsFunction ]
    Properties:
      RetentionInDays: 3
      LogGroupName: !Join ['', ['/aws/lambda/', !Ref SearchFunctionsFunction]]
      Tags:
        - Key: 'Environment'
          Value: !Ref Environment
        - Key: 'Service'
          Value: 'search-functions'

  AccessLoggedApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Environment
      OpenApiVersion: "3.0.3"
      Name: !Sub '${Environment}-lambda-stats-api'
      AccessLogSetting:
        DestinationArn: !GetAtt AccessLogGroup.Arn
        Format: '{"requestTime":"$context.requestTime","requestId":"$context.requestId","httpMethod":"$context.httpMethod","path":"$context.path","resourcePath":"$context.resourcePath","status":$context.status,"responseLatency":$context.responseLatency,"xrayTraceId":"$context.xrayTraceId","integrationRequestId":"$context.integration.requestId","functionResponseStatus":"$context.integration.status","integrationLatency":"$context.integration.latency","integrationServiceStatus":"$context.integration.integrationStatus","ip":"$context.identity.sourceIp","userAgent":"$context.identity.userAgent"}'
      Auth:
        ApiKeyRequired: true
        UsagePlan:
          CreateUsagePlan: PER_API
          UsagePlanName: !Sub '${Environment}-lambda-stats-usage-plan'
      MethodSettings:
        - HttpMethod: '*'
          ResourcePath: '/*'
          ThrottlingBurstLimit: 10
          ThrottlingRateLimit: 10
      Tags:
        Environment: !Ref Environment
        Service: 'lambda-stats-api'

  AccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 3
      LogGroupName: !Sub '/aws/apigateway/${Environment}-lambda-stats-api'
      Tags:
        - Key: 'Environment'
          Value: !Ref Environment
        - Key: 'Service'
          Value: 'lambda-stats-api'

  ListFunctionsFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: list-functions/
      Handler: list-functions
      Runtime: go1.x
      FunctionName: !Sub '${Environment}-list-lambda-function'
      Architectures:
        - x86_64
      Events:
        CatchAll:
          Type: Api 
          Properties:
            RestApiId:
              Ref: AccessLoggedApi
            Path: /list
            Method: GET
      Policies:
        - Statement:
          - Sid: ListLambdaFunctions
            Effect: Allow
            Action:
            - lambda:List*
            Resource: '*'
      Environment: 
        Variables:
          ENVIRONMENT: !Ref Environment
      Tags:
        Environment: !Ref Environment
        Service: 'list-functions'

  ListFunctionsLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: [ ListFunctionsFunction ]
    Properties:
      RetentionInDays: 3
      LogGroupName: !Join ['', ['/aws/lambda/', !Ref ListFunctionsFunction]]
      Tags:
        - Key: 'Environment'
          Value: !Ref Environment
        - Key: 'Service'
          Value: 'search-functions'
          
Outputs:
  SearchFunctionsFunction:
    Description: "Lambda Function ARN"
    Value: !GetAtt SearchFunctionsFunction.Arn